/*
OpenSLO V1 Schema

OpenSLO V1 Schema

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openslo_v1

import (
	"encoding/json"
)

// checks if the AlertConditionSpecInline type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertConditionSpecInline{}

// AlertConditionSpecInline struct for AlertConditionSpecInline
type AlertConditionSpecInline struct {
	Kind           *string    `json:"kind,omitempty"`
	Op             *Operation `json:"op,omitempty"`
	Threshold      *float32   `json:"threshold,omitempty"`
	LoopbackWindow *string    `json:"loopbackWindow,omitempty" validate:"regexp=^[1-9][0-9]*[mhdwMQY]$"`
	AlertAfter     *string    `json:"alertAfter,omitempty" validate:"regexp=^[1-9][0-9]*[mhdwMQY]$"`
}

// NewAlertConditionSpecInline instantiates a new AlertConditionSpecInline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertConditionSpecInline() *AlertConditionSpecInline {
	this := AlertConditionSpecInline{}
	return &this
}

// NewAlertConditionSpecInlineWithDefaults instantiates a new AlertConditionSpecInline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertConditionSpecInlineWithDefaults() *AlertConditionSpecInline {
	this := AlertConditionSpecInline{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *AlertConditionSpecInline) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConditionSpecInline) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *AlertConditionSpecInline) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *AlertConditionSpecInline) SetKind(v string) {
	o.Kind = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *AlertConditionSpecInline) GetOp() Operation {
	if o == nil || IsNil(o.Op) {
		var ret Operation
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConditionSpecInline) GetOpOk() (*Operation, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *AlertConditionSpecInline) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given Operation and assigns it to the Op field.
func (o *AlertConditionSpecInline) SetOp(v Operation) {
	o.Op = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *AlertConditionSpecInline) GetThreshold() float32 {
	if o == nil || IsNil(o.Threshold) {
		var ret float32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConditionSpecInline) GetThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *AlertConditionSpecInline) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given float32 and assigns it to the Threshold field.
func (o *AlertConditionSpecInline) SetThreshold(v float32) {
	o.Threshold = &v
}

// GetLoopbackWindow returns the LoopbackWindow field value if set, zero value otherwise.
func (o *AlertConditionSpecInline) GetLoopbackWindow() string {
	if o == nil || IsNil(o.LoopbackWindow) {
		var ret string
		return ret
	}
	return *o.LoopbackWindow
}

// GetLoopbackWindowOk returns a tuple with the LoopbackWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConditionSpecInline) GetLoopbackWindowOk() (*string, bool) {
	if o == nil || IsNil(o.LoopbackWindow) {
		return nil, false
	}
	return o.LoopbackWindow, true
}

// HasLoopbackWindow returns a boolean if a field has been set.
func (o *AlertConditionSpecInline) HasLoopbackWindow() bool {
	if o != nil && !IsNil(o.LoopbackWindow) {
		return true
	}

	return false
}

// SetLoopbackWindow gets a reference to the given string and assigns it to the LoopbackWindow field.
func (o *AlertConditionSpecInline) SetLoopbackWindow(v string) {
	o.LoopbackWindow = &v
}

// GetAlertAfter returns the AlertAfter field value if set, zero value otherwise.
func (o *AlertConditionSpecInline) GetAlertAfter() string {
	if o == nil || IsNil(o.AlertAfter) {
		var ret string
		return ret
	}
	return *o.AlertAfter
}

// GetAlertAfterOk returns a tuple with the AlertAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConditionSpecInline) GetAlertAfterOk() (*string, bool) {
	if o == nil || IsNil(o.AlertAfter) {
		return nil, false
	}
	return o.AlertAfter, true
}

// HasAlertAfter returns a boolean if a field has been set.
func (o *AlertConditionSpecInline) HasAlertAfter() bool {
	if o != nil && !IsNil(o.AlertAfter) {
		return true
	}

	return false
}

// SetAlertAfter gets a reference to the given string and assigns it to the AlertAfter field.
func (o *AlertConditionSpecInline) SetAlertAfter(v string) {
	o.AlertAfter = &v
}

func (o AlertConditionSpecInline) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertConditionSpecInline) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.LoopbackWindow) {
		toSerialize["loopbackWindow"] = o.LoopbackWindow
	}
	if !IsNil(o.AlertAfter) {
		toSerialize["alertAfter"] = o.AlertAfter
	}
	return toSerialize, nil
}

type NullableAlertConditionSpecInline struct {
	value *AlertConditionSpecInline
	isSet bool
}

func (v NullableAlertConditionSpecInline) Get() *AlertConditionSpecInline {
	return v.value
}

func (v *NullableAlertConditionSpecInline) Set(val *AlertConditionSpecInline) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertConditionSpecInline) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertConditionSpecInline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertConditionSpecInline(val *AlertConditionSpecInline) *NullableAlertConditionSpecInline {
	return &NullableAlertConditionSpecInline{value: val, isSet: true}
}

func (v NullableAlertConditionSpecInline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertConditionSpecInline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
