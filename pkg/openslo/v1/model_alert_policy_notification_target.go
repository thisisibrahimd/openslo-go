/*
OpenSLO V1 Schema

OpenSLO V1 Schema

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openslo_v1

import (
	"encoding/json"
)

// checks if the AlertPolicyNotificationTarget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertPolicyNotificationTarget{}

// AlertPolicyNotificationTarget struct for AlertPolicyNotificationTarget
type AlertPolicyNotificationTarget struct {
	ApiVersion *OpensloApiVersion           `json:"apiVersion,omitempty"`
	Kind       *string                      `json:"kind,omitempty"`
	Metadata   *Metadata                    `json:"metadata,omitempty"`
	Spec       *AlertNotificationTargetSpec `json:"spec,omitempty"`
	TargetRef  *string                      `json:"targetRef,omitempty" validate:"regexp=^[a-z0-9][a-z0-9.|\\/\\\\\\\\-]*[a-z0-9]*$"`
}

// NewAlertPolicyNotificationTarget instantiates a new AlertPolicyNotificationTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertPolicyNotificationTarget() *AlertPolicyNotificationTarget {
	this := AlertPolicyNotificationTarget{}
	return &this
}

// NewAlertPolicyNotificationTargetWithDefaults instantiates a new AlertPolicyNotificationTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertPolicyNotificationTargetWithDefaults() *AlertPolicyNotificationTarget {
	this := AlertPolicyNotificationTarget{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *AlertPolicyNotificationTarget) GetApiVersion() OpensloApiVersion {
	if o == nil || IsNil(o.ApiVersion) {
		var ret OpensloApiVersion
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertPolicyNotificationTarget) GetApiVersionOk() (*OpensloApiVersion, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *AlertPolicyNotificationTarget) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given OpensloApiVersion and assigns it to the ApiVersion field.
func (o *AlertPolicyNotificationTarget) SetApiVersion(v OpensloApiVersion) {
	o.ApiVersion = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *AlertPolicyNotificationTarget) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertPolicyNotificationTarget) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *AlertPolicyNotificationTarget) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *AlertPolicyNotificationTarget) SetKind(v string) {
	o.Kind = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *AlertPolicyNotificationTarget) GetMetadata() Metadata {
	if o == nil || IsNil(o.Metadata) {
		var ret Metadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertPolicyNotificationTarget) GetMetadataOk() (*Metadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *AlertPolicyNotificationTarget) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given Metadata and assigns it to the Metadata field.
func (o *AlertPolicyNotificationTarget) SetMetadata(v Metadata) {
	o.Metadata = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *AlertPolicyNotificationTarget) GetSpec() AlertNotificationTargetSpec {
	if o == nil || IsNil(o.Spec) {
		var ret AlertNotificationTargetSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertPolicyNotificationTarget) GetSpecOk() (*AlertNotificationTargetSpec, bool) {
	if o == nil || IsNil(o.Spec) {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *AlertPolicyNotificationTarget) HasSpec() bool {
	if o != nil && !IsNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given AlertNotificationTargetSpec and assigns it to the Spec field.
func (o *AlertPolicyNotificationTarget) SetSpec(v AlertNotificationTargetSpec) {
	o.Spec = &v
}

// GetTargetRef returns the TargetRef field value if set, zero value otherwise.
func (o *AlertPolicyNotificationTarget) GetTargetRef() string {
	if o == nil || IsNil(o.TargetRef) {
		var ret string
		return ret
	}
	return *o.TargetRef
}

// GetTargetRefOk returns a tuple with the TargetRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertPolicyNotificationTarget) GetTargetRefOk() (*string, bool) {
	if o == nil || IsNil(o.TargetRef) {
		return nil, false
	}
	return o.TargetRef, true
}

// HasTargetRef returns a boolean if a field has been set.
func (o *AlertPolicyNotificationTarget) HasTargetRef() bool {
	if o != nil && !IsNil(o.TargetRef) {
		return true
	}

	return false
}

// SetTargetRef gets a reference to the given string and assigns it to the TargetRef field.
func (o *AlertPolicyNotificationTarget) SetTargetRef(v string) {
	o.TargetRef = &v
}

func (o AlertPolicyNotificationTarget) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertPolicyNotificationTarget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	if !IsNil(o.TargetRef) {
		toSerialize["targetRef"] = o.TargetRef
	}
	return toSerialize, nil
}

type NullableAlertPolicyNotificationTarget struct {
	value *AlertPolicyNotificationTarget
	isSet bool
}

func (v NullableAlertPolicyNotificationTarget) Get() *AlertPolicyNotificationTarget {
	return v.value
}

func (v *NullableAlertPolicyNotificationTarget) Set(val *AlertPolicyNotificationTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertPolicyNotificationTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertPolicyNotificationTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertPolicyNotificationTarget(val *AlertPolicyNotificationTarget) *NullableAlertPolicyNotificationTarget {
	return &NullableAlertPolicyNotificationTarget{value: val, isSet: true}
}

func (v NullableAlertPolicyNotificationTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertPolicyNotificationTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
