/*
OpenSLO V1 Schema

OpenSLO V1 Schema

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openslo_v1

import (
	"encoding/json"
)

// checks if the SliSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SliSpec{}

// SliSpec struct for SliSpec
type SliSpec struct {
	Description     *string          `json:"description,omitempty"`
	ThresholdMetric *ThresholdMetric `json:"thresholdMetric,omitempty"`
	RatioMetric     *RatioMetric     `json:"ratioMetric,omitempty"`
}

// NewSliSpec instantiates a new SliSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSliSpec() *SliSpec {
	this := SliSpec{}
	return &this
}

// NewSliSpecWithDefaults instantiates a new SliSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSliSpecWithDefaults() *SliSpec {
	this := SliSpec{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SliSpec) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SliSpec) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SliSpec) SetDescription(v string) {
	o.Description = &v
}

// GetThresholdMetric returns the ThresholdMetric field value if set, zero value otherwise.
func (o *SliSpec) GetThresholdMetric() ThresholdMetric {
	if o == nil || IsNil(o.ThresholdMetric) {
		var ret ThresholdMetric
		return ret
	}
	return *o.ThresholdMetric
}

// GetThresholdMetricOk returns a tuple with the ThresholdMetric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliSpec) GetThresholdMetricOk() (*ThresholdMetric, bool) {
	if o == nil || IsNil(o.ThresholdMetric) {
		return nil, false
	}
	return o.ThresholdMetric, true
}

// HasThresholdMetric returns a boolean if a field has been set.
func (o *SliSpec) HasThresholdMetric() bool {
	if o != nil && !IsNil(o.ThresholdMetric) {
		return true
	}

	return false
}

// SetThresholdMetric gets a reference to the given ThresholdMetric and assigns it to the ThresholdMetric field.
func (o *SliSpec) SetThresholdMetric(v ThresholdMetric) {
	o.ThresholdMetric = &v
}

// GetRatioMetric returns the RatioMetric field value if set, zero value otherwise.
func (o *SliSpec) GetRatioMetric() RatioMetric {
	if o == nil || IsNil(o.RatioMetric) {
		var ret RatioMetric
		return ret
	}
	return *o.RatioMetric
}

// GetRatioMetricOk returns a tuple with the RatioMetric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliSpec) GetRatioMetricOk() (*RatioMetric, bool) {
	if o == nil || IsNil(o.RatioMetric) {
		return nil, false
	}
	return o.RatioMetric, true
}

// HasRatioMetric returns a boolean if a field has been set.
func (o *SliSpec) HasRatioMetric() bool {
	if o != nil && !IsNil(o.RatioMetric) {
		return true
	}

	return false
}

// SetRatioMetric gets a reference to the given RatioMetric and assigns it to the RatioMetric field.
func (o *SliSpec) SetRatioMetric(v RatioMetric) {
	o.RatioMetric = &v
}

func (o SliSpec) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SliSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ThresholdMetric) {
		toSerialize["thresholdMetric"] = o.ThresholdMetric
	}
	if !IsNil(o.RatioMetric) {
		toSerialize["ratioMetric"] = o.RatioMetric
	}
	return toSerialize, nil
}

type NullableSliSpec struct {
	value *SliSpec
	isSet bool
}

func (v NullableSliSpec) Get() *SliSpec {
	return v.value
}

func (v *NullableSliSpec) Set(val *SliSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableSliSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableSliSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSliSpec(val *SliSpec) *NullableSliSpec {
	return &NullableSliSpec{value: val, isSet: true}
}

func (v NullableSliSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSliSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
