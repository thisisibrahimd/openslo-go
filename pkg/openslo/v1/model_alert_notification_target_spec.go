/*
OpenSLO V1 Schema

OpenSLO V1 Schema

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openslo_v1

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AlertNotificationTargetSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertNotificationTargetSpec{}

// AlertNotificationTargetSpec struct for AlertNotificationTargetSpec
type AlertNotificationTargetSpec struct {
	Target      string  `json:"target"`
	Description *string `json:"description,omitempty"`
}

type _AlertNotificationTargetSpec AlertNotificationTargetSpec

// NewAlertNotificationTargetSpec instantiates a new AlertNotificationTargetSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertNotificationTargetSpec(target string) *AlertNotificationTargetSpec {
	this := AlertNotificationTargetSpec{}
	this.Target = target
	return &this
}

// NewAlertNotificationTargetSpecWithDefaults instantiates a new AlertNotificationTargetSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertNotificationTargetSpecWithDefaults() *AlertNotificationTargetSpec {
	this := AlertNotificationTargetSpec{}
	return &this
}

// GetTarget returns the Target field value
func (o *AlertNotificationTargetSpec) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *AlertNotificationTargetSpec) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *AlertNotificationTargetSpec) SetTarget(v string) {
	o.Target = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AlertNotificationTargetSpec) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertNotificationTargetSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AlertNotificationTargetSpec) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AlertNotificationTargetSpec) SetDescription(v string) {
	o.Description = &v
}

func (o AlertNotificationTargetSpec) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertNotificationTargetSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["target"] = o.Target
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

func (o *AlertNotificationTargetSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"target",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertNotificationTargetSpec := _AlertNotificationTargetSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertNotificationTargetSpec)

	if err != nil {
		return err
	}

	*o = AlertNotificationTargetSpec(varAlertNotificationTargetSpec)

	return err
}

type NullableAlertNotificationTargetSpec struct {
	value *AlertNotificationTargetSpec
	isSet bool
}

func (v NullableAlertNotificationTargetSpec) Get() *AlertNotificationTargetSpec {
	return v.value
}

func (v *NullableAlertNotificationTargetSpec) Set(val *AlertNotificationTargetSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertNotificationTargetSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertNotificationTargetSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertNotificationTargetSpec(val *AlertNotificationTargetSpec) *NullableAlertNotificationTargetSpec {
	return &NullableAlertNotificationTargetSpec{value: val, isSet: true}
}

func (v NullableAlertNotificationTargetSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertNotificationTargetSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
